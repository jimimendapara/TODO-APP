{"version":3,"sources":["Todoitem.js","todosData.js","App.js","index.js"],"names":["Todoitem","props","className","type","checked","item","completed","onChange","handleChange","id","style","fonStyle","color","textDecoration","text","todosData","App","state","todos","bind","this","setState","prevState","map","todo","todoiTems","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qNAiBeA,MAhBf,SAAkBC,GAOd,OACI,sBAAKC,UAAU,YAAf,UACG,uBAAOC,KAAK,WAAWC,QAASH,EAAMI,KAAKC,UAC3CC,SAAU,kBAAIN,EAAMO,aAAaP,EAAMI,KAAKI,OAC5C,mBAAIC,MAAOT,EAAMI,KAAKC,UAVN,CACnBK,SAAU,SACVC,MAAO,OACPC,eAAgB,gBAOsC,KAAnD,SAA0DZ,EAAMI,KAAKS,WCqB9DC,G,MAjCA,CACd,CACEN,GAAI,EACJK,KAAM,qBACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,mBACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,kBACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,eACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,cACNR,WAAW,GAEb,CACEG,GAAI,EACJK,KAAM,YACNR,WAAW,KCeFU,EAtCf,kDACE,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CAACC,MAAOH,GACrB,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBAJT,EADf,gDAQE,SAAaV,GACXW,KAAKC,UAAS,SAACC,GAQb,MAAO,CACLJ,MAPmBI,EAAUJ,MAAMK,KAAI,SAACC,GAIxC,OAHIA,EAAKf,KAAOA,IACde,EAAKlB,WAAakB,EAAKlB,WAElBkB,WAff,oBAwBA,WAAU,IAAD,OAEDC,EAAYL,KAAKH,MAAMC,MAAMK,KAAI,SAAClB,GAAD,OACtC,cAAC,EAAD,CAAwBA,KAAMA,EAAMG,aAAc,EAAKA,cAAxCH,EAAKI,OAGnB,OACE,qBAAKP,UAAU,YAAf,SACGuB,QAhCT,GAAyBC,IAAMC,WCF/BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.385cfb89.chunk.js","sourcesContent":["import React from 'react';\nfunction Todoitem(props) {\n    const completedStyle = {\n        fonStyle: \"italic\",\n        color: \"grey\",\n        textDecoration: \"line-through\",\n      };\n     \n    return (\n        <div className=\"todo-item\">\n           <input type=\"checkbox\" checked={props.item.completed}\n           onChange={()=>props.handleChange(props.item.id)} /> \n           <p  style={props.item.completed ? completedStyle : null}>{props.item.text}</p>\n        </div>\n    );\n}\n\nexport default Todoitem\n","const todosData = [\n    {\n      id: 1,\n      text: \"Take out the trash\",\n      completed: true,\n    },\n    {\n      id: 2,\n      text: \"Grocery shopping\",\n      completed: false,\n    },\n    {\n      id: 3,\n      text: \"Clean fish tank\",\n      completed: false,\n    },\n    {\n      id: 4,\n      text: \"Mow the lawn\",\n      completed: false,\n    },\n    {\n      id: 5,\n      text: \"Learn React\",\n      completed: true,\n    },\n    {\n      id: 6,\n      text: \"Take Rest\",\n      completed: false,\n    },\n   ];\n    \n   export default todosData;\n   ","import React from \"react\";\nimport Todoitem from \"./Todoitem\"\nimport \"./index.css\";\nimport todosData from \"./todosData\";\n\n\nexport class App extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {todos: todosData};\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n  handleChange(id) {\n    this.setState((prevState) => {\n      //alert((JSON.stringify(prevState.todos[0].id)));\n      const updatedTodos = prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n      return {\n        todos: updatedTodos,\n      };\n    });\n  }\n \n  \nrender() {\n\n  const todoiTems = this.state.todos.map((item) => \n  (<Todoitem key={item.id} item={item} handleChange={this.handleChange}/>));\n\n    \n    return (\n      <div className=\"todo-list\">\n        {todoiTems}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}